image: docker:latest
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  CONTAINER_UI_IMAGE: dlike/folls.ui:$CI_COMMIT_SHA
  CONTAINER_API_IMAGE: dlike/folls.api:$CI_COMMIT_SHA

before_script:
  - export FEATURE_NAME=$(echo $CI_COMMIT_REF_NAME | sed 's/feature\///g')

build:
  stage: build
  script:
    - echo $DOCKER_PASS
    - echo $DOCKER_PASS | docker login -u $DOCKER_LOGIN --password-stdin
    - docker build --pull -t $CONTAINER_UI_IMAGE ./Folls.UI
    - docker push $CONTAINER_UI_IMAGE
    - docker build --pull -t $CONTAINER_API_IMAGE ./Folls.API
    - docker push $CONTAINER_API_IMAGE
  only:
    - /^feature\/.*$/

deploy:
  stage: deploy
  image: alpine
  environment:
    name: $CI_COMMIT_REF_NAME
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster blue-cluster --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASS"
    - kubectl config set-context default --cluster=blue-cluster --user=admin
    - kubectl config use-context default
    - kubectl config view
    - sed -i 's,{{image}},'"$CONTAINER_UI_IMAGE"',g' ./kube/folls.ui.yml
    - sed -i 's,{{image}},'"$CONTAINER_API_IMAGE"',g' ./kube/folls.api.yml
    - sed -i 's,{{namespace}},'"$FEATRURE_NAME"',g' ./kube/folls.namespace.yml
    - sed -i 's,{{subdomain}},'"$FEATRURE_NAME"'.,g' ./kube/folls.ingress.yml
    - kubectl apply -f ./kube/folls.namespace.yml
    - kubectl apply -n $FEATURE_NAME -f ./kube/
  only:
    - /^feature\/.*$/

tearup:
  stage: deploy
  image: alpine
  variables:
    GIT_STRATEGY: none
  script:
    - apk update && apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster blue-cluster --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASS"
    - kubectl config set-context default --cluster=blue-cluster --user=admin
    - kubectl config use-context default
    - kubectl config view
    - kubectl delete namespace $FEATURE_NAME
  only:
    - /^feature\/.*$
  when: manual
  environment: 
    name: $CI_COMMIT_REF_NAME
    action: stop
